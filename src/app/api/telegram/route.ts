import { NextRequest, NextResponse } from 'next/server'
import TelegramBot from 'node-telegram-bot-api'

const token = process.env.TELEGRAM_BOT_TOKEN || '8381245817:AAEXDwxX2Ygtvw1Idohmppw5Fg_K4g1bET8'
const bot = new TelegramBot(token, { polling: false })

export async function GET() {
  return NextResponse.json({ 
    status: 'Telegram webhook is ready',
    timestamp: new Date().toISOString(),
    bot: '360Travel',
    version: '1.0.1'
  })
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    
    // Handle different types of updates
    if (body.message) {
      const { message } = body
      const chatId = message.chat.id
      const text = message.text || ''
      
      // Handle commands
      if (text.startsWith('/')) {
        await handleCommand(chatId, text)
      } else {
        // Handle regular messages
        await handleMessage(chatId, text)
      }
    } else if (body.callback_query) {
      // Handle inline keyboard callbacks
      const { callback_query } = body
      const chatId = callback_query.message.chat.id
      const data = callback_query.data
      
      await handleCallback(chatId, data)
    }
    
    return NextResponse.json({ success: true })
  } catch (error) {
    console.error('Telegram webhook error:', error)
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })
  }
}

async function handleCommand(chatId: number, command: string) {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  if (command.startsWith('/reply ')) {
    const parts = command.split(' ')
    if (parts.length >= 3) {
      const userId = parts[1]
      const message = parts.slice(2).join(' ')
      await sendReplyToUser(chatId, userId, message)
      return
    }
  }

  switch (command) {
    case '/start':
      await sendWelcomeMessage(chatId)
      break
    case '/help':
      await sendHelpMessage(chatId)
      break
    case '/hotels':
      await sendHotelsMessage(chatId)
      break
    case '/flights':
      await sendFlightsMessage(chatId)
      break
    case '/cars':
      await sendCarsMessage(chatId)
      break
    case '/contact':
      await sendContactMessage(chatId)
      break
    case '/rules':
      await sendRulesMessage(chatId)
      break
    default:
      await sendUnknownCommandMessage(chatId)
  }
}

async function handleMessage(chatId: number, _text: string) {
  const welcomeMessage = `üëã –ü—Ä–∏–≤–µ—Ç! –Ø 360¬∞ Travel Bot - –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö!

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
üè® /hotels - –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π
‚úàÔ∏è /flights - –ü–æ–∏—Å–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤
üöó /cars - –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
üí¨ /contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
üìò /rules - –ü—Ä–∞–≤–∏–ª–∞ –∏ FAQ
‚ùì /help - –ü–æ–º–æ—â—å

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.`

  await bot.sendMessage(chatId, welcomeMessage)
}

async function handleCallback(chatId: number, data: string) {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫
  if (data.startsWith('accept_') || data.startsWith('reject_') || data.startsWith('reply_')) {
    await handleRequestCallback(chatId, data)
    return
  }

  // –û–±—ã—á–Ω—ã–µ callback'—ã
  switch (data) {
    case 'hotels':
      await sendHotelsMessage(chatId)
      break
    case 'flights':
      await sendFlightsMessage(chatId)
      break
    case 'cars':
      await sendCarsMessage(chatId)
      break
    case 'contact':
      await sendContactMessage(chatId)
      break
    case 'rules':
      await sendRulesMessage(chatId)
      break
  }
}

async function sendWelcomeMessage(chatId: number) {
  const message = `üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ 360¬∞ Travel!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ –¥–æ -30%!

üè® –û—Ç–µ–ª–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É
‚úàÔ∏è –ê–≤–∏–∞–±–∏–ª–µ—Ç—ã –æ—Ç –≤–µ–¥—É—â–∏—Ö –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–π  
üöó –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
üí¨ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

üöÄ –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—à–µ Mini App –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫!`

  const keyboard = {
    inline_keyboard: [
      [
        { 
          text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å Mini App', 
          web_app: { url: 'https://travel360-mini-app-e5uw.vercel.app?v=1.0.1' }
        }
      ],
      [
        { text: 'üè® –û—Ç–µ–ª–∏', callback_data: 'hotels' },
        { text: '‚úàÔ∏è –ê–≤–∏–∞–±–∏–ª–µ—Ç—ã', callback_data: 'flights' }
      ],
      [
        { text: 'üöó –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ', callback_data: 'cars' },
        { text: 'üí¨ –ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data: 'contact' }
      ],
      [
        { text: 'üìò –ü—Ä–∞–≤–∏–ª–∞', callback_data: 'rules' }
      ]
    ]
  }

  await bot.sendMessage(chatId, message, { reply_markup: keyboard })
}

async function sendHelpMessage(chatId: number) {
  const message = `‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

üè® /hotels - –ü–æ–∏—Å–∫ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–µ–ª–µ–π
‚úàÔ∏è /flights - –ü–æ–∏—Å–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤
üöó /cars - –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
üí¨ /contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
üìò /rules - –ü—Ä–∞–≤–∏–ª–∞ –∏ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚ùì /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üöÄ –û—Ç–∫—Ä–æ–π—Ç–µ Mini App –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ —Å–∫–∏–¥–∫–∏!

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é!`

  await bot.sendMessage(chatId, message)
}

async function sendHotelsMessage(chatId: number) {
  const message = `üè® –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π

–ù–∞–π–¥–∏—Ç–µ –∏ –∑–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –æ—Ç–µ–ª–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É —Å –ª—É—á—à–∏–º–∏ —Ü–µ–Ω–∞–º–∏!

üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ Booking.com –¥–ª—è –ø–æ–∏—Å–∫–∞:
https://www.booking.com

üí° –°–æ–≤–µ—Ç—ã:
‚Ä¢ –ë—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ –¥–ª—è –ª—É—á—à–∏—Ö —Ü–µ–Ω
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –æ—Ç–∑—ã–≤—ã –≥–æ—Å—Ç–µ–π
‚Ä¢ –û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ`

  await bot.sendMessage(chatId, message)
}

async function sendFlightsMessage(chatId: number) {
  const message = `‚úàÔ∏è –ü–æ–∏—Å–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤

–°—Ä–∞–≤–Ω–∏—Ç–µ —Ü–µ–Ω—ã –Ω–∞ –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã –æ—Ç —Å–æ—Ç–µ–Ω –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–π!

üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ Kayak –¥–ª—è –ø–æ–∏—Å–∫–∞:
https://www.kayak.com

üí° –°–æ–≤–µ—Ç—ã:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–∏–±–∫–∏–µ –¥–∞—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ü–µ–Ω
‚Ä¢ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –±–∞–≥–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–π`

  await bot.sendMessage(chatId, message)
}

async function sendCarsMessage(chatId: number) {
  const message = `üöó –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π

–ê—Ä–µ–Ω–¥—É–π—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —É –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É!

üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ RentalCars.com:
https://www.rentalcars.com

üí° –°–æ–≤–µ—Ç—ã:
‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Ü–µ–Ω—ã —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —É—Å–ª–æ–≤–∏—è —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è
‚Ä¢ –£—á–∏—Ç—ã–≤–∞–π—Ç–µ —Ç–æ–ø–ª–∏–≤–Ω—É—é –ø–æ–ª–∏—Ç–∏–∫—É`

  await bot.sendMessage(chatId, message)
}

async function sendContactMessage(chatId: number) {
  const message = `üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏

–ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å –æ—Ç –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤!

üîó –ù–∞—à Telegram –∫–∞–Ω–∞–ª:
https://t.me/travel360net

üìß Email: support@travel360.net

‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 24/7

–ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤–∞—à–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è!`

  await bot.sendMessage(chatId, message)
}

async function sendRulesMessage(chatId: number) {
  const message = `üìò –ü—Ä–∞–≤–∏–ª–∞ –∏ FAQ

–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.

üîó –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
https://telegra.ph/360Travel-Rules-and-FAQ-08-01

üìã –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:
‚Ä¢ –í—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã
‚Ä¢ –ú—ã –Ω–µ –≤–∑–∏–º–∞–µ–º –∫–æ–º–∏—Å—Å–∏—é –∑–∞ —É—Å–ª—É–≥–∏
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ 24/7
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π`

  await bot.sendMessage(chatId, message)
}

async function sendUnknownCommandMessage(chatId: number) {
  const message = `‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.`

  await bot.sendMessage(chatId, message)
}

async function handleRequestCallback(chatId: number, data: string) {
  const [action, userId] = data.split('_')
  
  switch (action) {
    case 'accept':
      await bot.sendMessage(chatId, `‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –ø—Ä–∏–Ω—è—Ç–∞!`)
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      try {
        await bot.sendMessage(userId, `‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.`)
      } catch (error) {
        console.error('Error notifying user:', error)
      }
      break
    case 'reject':
      await bot.sendMessage(chatId, `‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.`)
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      try {
        await bot.sendMessage(userId, `‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.`)
      } catch (error) {
        console.error('Error notifying user:', error)
      }
      break
    case 'reply':
      await bot.sendMessage(chatId, `üí¨ –î–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId} –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /reply ${userId} <–≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ>`)
      break
  }
}

async function sendReplyToUser(adminChatId: number, userId: string, message: string) {
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.sendMessage(userId, `üí¨ –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n${message}`)
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await bot.sendMessage(adminChatId, `‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`)
  } catch (error) {
    console.error('Error sending reply to user:', error)
    await bot.sendMessage(adminChatId, `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`)
  }
} 