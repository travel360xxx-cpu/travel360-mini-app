import { NextRequest, NextResponse } from 'next/server'
import TelegramBot from 'node-telegram-bot-api'

const token = process.env.TELEGRAM_BOT_TOKEN || '8381245817:AAEXDwxX2Ygtvw1Idohmppw5Fg_K4g1bET8'
const bot = new TelegramBot(token, { polling: false })

// ID —á–∞—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID)
const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID || '123456789'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { service, details, user } = body

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const message = `üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user?.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} ${user?.last_name || ''}
üÜî ID: ${user?.id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
üë§ Username: @${user?.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üìã –£—Å–ª—É–≥–∞: ${service}
üìù –î–µ—Ç–∞–ª–∏: ${details}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await bot.sendMessage(ADMIN_CHAT_ID, message, {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data: `accept_${user?.id || 'unknown'}` },
            { text: '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data: `reject_${user?.id || 'unknown'}` }
          ],
          [
            { text: 'üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å', callback_data: `reply_${user?.id || 'unknown'}` }
          ]
        ]
      }
    })

    return NextResponse.json({ success: true, message: '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' })
  } catch (error) {
    console.error('Error submitting request:', error)
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏' }, 
      { status: 500 }
    )
  }
} 